# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[changelog]
header = ""

body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group }}
    {% for group, commits in commits | group_by(attribute="scope") %}
        #### {{ group }}
        {% for commit in commits %}
            - {{ commit.message | upper_first }}\
        {% endfor %}
    {% endfor %}\
{% endfor %}\n
"""

footer = ""

trim = true

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
filter_unconventional = true

split_commits = false

default_scope = "unscoped"

commit_parsers = [
    { message = "^feat", group = "Features", default_scope = "unscoped" },
    { message = "^fix", group = "Bug Fixes", default_scope = "unscoped" },
    { message = "^doc", group = "Documentation", default_scope = "unscoped" },
    { message = "^perf", group = "Performance", default_scope = "unscoped" },
    { message = "^refactor", group = "Refactor", default_scope = "unscoped" },
    { message = "^style", group = "Styling", default_scope = "unscoped" },
    { message = "^test", group = "Testing", default_scope = "unscoped" },
    { message = "^chore", group = "Miscellaneous Tasks", default_scope = "unscoped" },
    { body = ".*security", group = "Security", default_scope = "unscoped" },
]

protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9].*"
skip_tags = ""
ignore_tags = ""
topo_order = false
sort_commits = "oldest"
